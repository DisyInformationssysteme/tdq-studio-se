<?xml version="1.0" encoding="UTF-8"?>
<cheatsheet
      title="Create a new user-defined indicator">
   <intro>
      <description>
         You can create your own personalized indicators and manage them in the same way that you manage any system indicators. This tutorial guides you through the creation of a user-defined indicator.
      </description>
   </intro>
   <item
         title="Define the User-defined Indicator metadata and settings" dialog="true" skip="false">
      <description>
         To open the <b>New Indicator</b> wizard, expand the <b>Libraries</b> node and the <b>Indicators</b> folder on the <b>DQ Repository</b> tree view. Right click <b>User-defined Indicators</b> and select <b>New Indicator</b>. The wizard prompts you to provide the metadata (name, purpose, description...). Select the database type from the <b>Language Selection</b> list and depending on the indicator you want to create, enter the corresponding SQL template statement in the SQL Template field. Upon completion,an editor opens in which you can review and modify the indicator settings, if required.
      </description>
      <action class="org.talend.dataprofiler.core.ui.action.actions.CreateUDIAction" pluginId="org.talend.dataprofiler.core" confirm="false">
      </action>
   </item>
   <item
         title="Review the indicator settings">
      <description>
         You can review and modify the indicator settings in the <b>Indicator Settings</b> editor. 
		 Click <b>Indicator Definition</b> to expand the editor. Click the <b>[+]</b> button if you want to add indicators. Under <b>Database</b>, select the database specific language from the list, or select <b>ALL_DATABASE_TYPE</b> if the query is generic enough to work in any database. Enter the corresponding SQL template statement in the SQL Template field.	 
		 
The SQL Template is an SQL query with the following variable representations, for instance:
<b>&lt;%=__COLUMN_NAMES__%&gt;</b> replaces the column(s),
<b>&lt;%=__TABLE_NAME__%&gt;</b> replaces the table name,
<b>&lt;%=__WHERE_CLAUSE__%&gt;</b> replaces the where clause provided by the data filter,
<b>&lt;%=__GROUP_BY_ALIAS__%&gt;</b> replaces the &quot;group by&quot; whole clause.

By default, the new indicator category is set as <b>User-defined Count</b>. Select the relevant category depending on the kind of output the indicator is set to return.
      </description>
   </item>
</cheatsheet>
